[[modules-memcached]]
== memcached

memcached 模块允许（尽可能接近地）通过 memcached 协议暴露 *Elasticsearch* API。

它通过称作 `transport-memcached` 的插件提供，安装教程在 https://github.com/elastic/elasticsearch-transport-memcached[这里]。另一个选择是下载 memcached 插件然后将它放到 `plugins` 目录下。

memcached 协议同时支持二进制和文本协议，自动检测正确的那个来使用。

[float]
=== 映射 REST 到 Memcached 协议

Elasticsearch 中 Memcached 命令被映射到 REST 并且由一样的一般 REST 层来处理。这里是一个支持的 memcached 命令的列表：

[float]
==== GET

memcached `GET` 命令映射到一个 REST `GET`. 使用的键是 URI（含参数）。主要缺点是 memcached `GET` 不允许在请求中包含请求体（且 `SET` 不允许返回结果...）。因为这个原因，多数 REST API（如查询）也允许接收 "source" 作为 URI 参数。

[float]
==== SET

memcached `SET` 命令映射到一个 REST `POST`。使用的键是 URI（含参数），请求体映射到 REST 请求体。

[float]
==== DELETE

memcached `DELETE` 命令映射到一个 REST `DELETE`。使用的键是 URI（含参数）。

[float]
==== QUIT

支持 memcached `QUIT` 命令，来断开客户端连接。

[float]
=== 设置

以下是可对 memcached 进行配置的设置：

[cols="<,<",options="header",]
|===============================================================
|Setting |Description
|`memcached.port` |一个绑定的端口范围。默认为 `11211-11311`。
|===============================================================

它也使用共通的<<modules-network,网络设定>>。

[float]
=== 禁用 memcached

要完全禁用 memcached 模块并且不被启动，可将 `memcached.enabled` 设定为 `false`。默认会被启用，只要在插件中检测到它。
